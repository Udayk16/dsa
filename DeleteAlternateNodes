#include<iostream>
using namespace std;
class node{
    public:
    int val;
    node* next;
    node(int val){
        this->val=val;
        this->next=nullptr;
    }
};
node* ll(node* head,int val){
    if(head==nullptr){
        return (new node(val));
    }
    node*temp=head;
    while(temp->next!=nullptr){
        temp=temp->next;
    }
    temp->next= new node(val);
    return head;
}
node* delAtAlternate(node* &head){
    if(head==nullptr) return head;

    node* current= head;
    while(current!=nullptr && current->next!=nullptr)
    {
     node* temp=current->next;
    current->next=temp->next;
    delete(temp);
    current=current->next;
    }
    return head;
} 
void display(node* head){
    node* temp=head;
    while(temp!=nullptr){
        cout<<temp->val<<"-->";
        temp=temp->next;
    }
    cout<<"null\n";
}

int main(){
    node* head=nullptr;
    head=ll(head,1);
    head=ll(head,2);
    head=ll(head,3);
    head=ll(head,4);
    head=ll(head,5);
    display(head);
    head=delAtAlternate(head);
    display(head);
    while(head){
        node* temp=head;
        head=head->next;
        delete(temp);
    }
    
}

//         output
//      1-->2-->3-->4-->5-->null
//      1-->3-->5-->null
